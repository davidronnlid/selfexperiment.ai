-- Fix user_variable_preferences table
-- Run this in your Supabase SQL Editor

-- Create the table with correct structure (only essential columns)
CREATE TABLE IF NOT EXISTS user_variable_preferences (
    id BIGINT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    user_id UUID NOT NULL REFERENCES auth.users(id) ON DELETE CASCADE,
    variable_id UUID NOT NULL REFERENCES variables(id) ON DELETE CASCADE,
    is_shared BOOLEAN DEFAULT false,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
    UNIQUE(user_id, variable_id)
);

-- Create indexes for performance
CREATE INDEX IF NOT EXISTS idx_user_variable_preferences_user_id 
    ON user_variable_preferences(user_id);
CREATE INDEX IF NOT EXISTS idx_user_variable_preferences_variable_id 
    ON user_variable_preferences(variable_id);
CREATE INDEX IF NOT EXISTS idx_user_variable_preferences_user_variable 
    ON user_variable_preferences(user_id, variable_id);

-- Enable Row Level Security
ALTER TABLE user_variable_preferences ENABLE ROW LEVEL SECURITY;

-- Drop existing policies to avoid conflicts
DROP POLICY IF EXISTS "Users can view own variable preferences" ON user_variable_preferences;
DROP POLICY IF EXISTS "Users can manage own variable preferences" ON user_variable_preferences;

-- Create RLS policies
CREATE POLICY "Users can view own variable preferences" ON user_variable_preferences
    FOR SELECT USING (auth.uid() = user_id);

CREATE POLICY "Users can manage own variable preferences" ON user_variable_preferences
    FOR ALL USING (auth.uid() = user_id);

-- Add trigger for updated_at
CREATE OR REPLACE FUNCTION update_updated_at_column()
RETURNS TRIGGER AS $$
BEGIN
    NEW.updated_at = NOW();
    RETURN NEW;
END;
$$ LANGUAGE plpgsql;

DROP TRIGGER IF EXISTS update_user_variable_preferences_updated_at ON user_variable_preferences;
CREATE TRIGGER update_user_variable_preferences_updated_at
    BEFORE UPDATE ON user_variable_preferences
    FOR EACH ROW EXECUTE FUNCTION update_updated_at_column();

-- Verify setup
SELECT 'user_variable_preferences table setup complete!' as status; 